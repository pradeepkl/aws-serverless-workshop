AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  dynamodb-crud-app

  Sample SAM Template for dynamodb-crud-app

Globals:
  Function:
    Timeout: 10
    Runtime: nodejs22.x
    MemorySize: 128
    Architectures:
      - x86_64
  
Resources:

  MyHttpApi:
    Type: AWS::Serverless::HttpApi
    Properties:
      StageName: dev
      CorsConfiguration:
        AllowMethods: 
          - GET
          - POST
          - PUT
          - DELETE
        AllowOrigins: 
          - "*"
        AllowHeaders:
          - "*"

  EmployeeTable:
    Type: AWS::DynamoDB::Table
    Properties: 
      TableName: Employees
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions: 
        - AttributeName: empId
          AttributeType: S
      KeySchema: 
        - AttributeName: empId
          KeyType: HASH
    DeletionPolicy: Delete

  SeedEmployeesFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: app.handler
      CodeUri: src/seed-employees/
      Policies:
        - Version: "2012-10-17"
          Statement:
            - Effect: "Allow"
              Action:
                - "dynamodb:PutItem"
              Resource: !GetAtt EmployeeTable.Arn
      Environment:
        Variables:
          TABLE_NAME: !Ref EmployeeTable
      Events:
        SeedEmployees:
          Type: HttpApi
          Properties:
            Method: POST
            Path: /employees/seed
            ApiId: !Ref MyHttpApi

  FetchEmployeesFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: app.handler
      CodeUri: src/fetch-employees/
      Policies:
        - Version: "2012-10-17"
          Statement:
            - Effect: "Allow"
              Action:
                - "dynamodb:Scan"
              Resource: !GetAtt EmployeeTable.Arn
      Environment:
        Variables:
          TABLE_NAME: !Ref EmployeeTable
      Events:
        FetchEmployees:
          Type: HttpApi
          Properties:
            Method: GET    
            Path: /employees
            ApiId: !Ref MyHttpApi

  UpdateEmployeeFunction:
      Type: AWS::Serverless::Function
      Properties:
        Handler: app.handler
        CodeUri: src/update-employee/
        Policies:
          - Version: "2012-10-17"
            Statement:
              - Effect: "Allow"
                Action:
                  - "dynamodb:UpdateItem"
                Resource: !GetAtt EmployeeTable.Arn
        Environment:
          Variables:
            TABLE_NAME: !Ref EmployeeTable
        Events:
          UpdateEmployee:
            Type: HttpApi
            Properties:
              Method: PUT    
              Path: /employees/{empId}
              ApiId: !Ref MyHttpApi

  DeleteEmployeeFunction:
      Type: AWS::Serverless::Function
      Properties:
        Handler: app.handler
        CodeUri: src/delete-employee/
        Policies:
          - Version: "2012-10-17"
            Statement:
              - Effect: "Allow"
                Action:
                  - "dynamodb:DeleteItem"
                Resource: !GetAtt EmployeeTable.Arn
        Environment:
          Variables:
            TABLE_NAME: !Ref EmployeeTable
        Events:
          DeleteEmployee:
            Type: HttpApi
            Properties:
              Method: DELETE    
              Path: /employees/{empId}
              ApiId: !Ref MyHttpApi

Outputs:
  EmployeeTableName:
    Description: "Employee Table Name"
    Value: !Ref EmployeeTable
  SeedEmployeesFunction:
    Description: "Seed Employees Lambda Function ARN"
    Value: !GetAtt SeedEmployeesFunction.Arn
  FetchEmployeesFunction:
    Description: "Fetch Employees Lambda Function ARN"
    Value: !GetAtt FetchEmployeesFunction.Arn
  UpdateEmployeeFunction:
    Description: "Update Employee Lambda Function ARN"
    Value: !GetAtt UpdateEmployeeFunction.Arn
  DeleteEmployeeFunction:
    Description: "Delete Employee Lambda Function ARN"
    Value: !GetAtt DeleteEmployeeFunction.Arn
  MyHttpApiUrl:
    Description: "API Gateway URL"
    Value: !Sub "https://${MyHttpApi}.execute-api.${AWS::Region}.amazonaws.com/${MyHttpApi.Stage}"
      


